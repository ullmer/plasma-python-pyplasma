#!python

import optparse
from loam import *
import plasma.hose

def main():
    p = optparse.OptionParser()
    p.add_option('-q', '--quiet', dest='quiet', action='store_true', default=False, "Don't complain if a pool exists (but leave it alone)")
    p.add_option('-z', '--zap', dest='zap', action='store_true', default=False, help='"zap" (delete and re-create) pool if it already exists')
    p.add_option('-G', '--green-room', dest='resizable', action='store_const', const=False, help="create a pool which is compatible with green-room's plasma")
    p.add_option('-R', '--resizeable', dest='resizable', action='store_const', const=True, default=True, help="create a pool which can be resized (default)")
    p.add_option('-F', '--single-file', dest='singlefile', action='store_const', const=True, default=False, help="create a single-file pool (which is also resizable)")
    p.add_option('-S', '--sync', dest='sync', action='store_true', default=False, help="set the pool's 'sync' option to true")
    p.add_option('-t', '--type', dest='pool_type', action='store', type='string', default='mmap', help='Pool type (defaults to "mmap")')
    p.add_option('-s', '--size', dest='pool_size', action='store', type='int', default=1048576, help='Pool size (defaults to 1048576 bytes)')
    p.add_option('-i', '--index-capacity', dest='index_capacity', action='store', type='int', default=0, help='Pool index capacity (defaults to 0 proteins)')
    p.add_option('-m', '--mode', dest='mode', default='0777', action='store', type='string', help="Pool permissions (octal mode) - works best if it only contains 7's and 0's")
    p.add_option('-u', '--owner', dest='owner', action='store', type='string', default=None, help='Pool owner - may be a name or a number')
    p.add_option('-g', '--group', dest='group', action='store', type='string', default=None, help='Pool group - may be a name or a number')
#g-speak SOE (c) Oblong Industries - g-speak 3.0.3
#Usage: p-create [-q] [-z] [-G | -R | -F] [-S] [-t <type>] [-s <size>] [-i <index cap>]
#                [-m <octal mode>] [-u <owner>] [-g <group>] <pool_name> [...]
#    -q Don't complain if pool exists (but leave it alone)
#    -z "zap" (delete and re-create) pool if it already exists
#    -G create a pool which is compatible with green-room's plasma
#    -R create a pool which can be resized (default)
#    -F create a single-file pool (which is also resizable)
#    -S set the pool's 'sync' option to true
#    <type> defaults to "mmap"
#    <size> defaults to 1048576 bytes
#    <index cap> defaults to 0 proteins
#    <octal mode> works best if it only contains 7's and 0's
#    <owner> and <group> may be name or number
    opts, args = p.parse_args()
    options = obmap()
    options['size'] = unt64(opts.size)
    options['index-capacity'] = unt64(opts.index_capacity)
    options['resizable'] = obbool(opts.resizable)
    options['stop-when-full'] = obbool(False)
    options['frozen'] = obbool(False)
    options['auto-dispose'] = obbool(False)
    options['checksum'] = obbool(False)
    options['sync'] = obbool(opts.sync)
    options['mode'] = opts.mode
    options['uid'] = opts.owner
    options['gid'] = opts.group
    plasma.hose.Hose.create(args[0], 'mmap', options)

if '__main__' == __name__:
    main()

